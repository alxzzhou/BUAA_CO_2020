## 测试各类指令异常
li $2,0x3011 ## test1的PC：0x3010
jr $2         ## PC字未对齐(非受害指令）
nop
ori $2,$0,20  
test1:
ori $2,$0,2 ## 取指异常（PC字未对齐）
addi $3,$3,1
teq $3,$3 ## 未知指令异常
addi $3,$3,1
li $2,0xfbc123d
sw $2,1($0) ## sw字未对齐
addi $3,$3,1
sh $2,1($0) ## sh字未对齐
addi $3,$3,1
sh $2,0x7f10($0) ## sh存Timer
addi $3,$3,1
sb $2,0x7f10($0) ## sb存Timer
addi $3,$3,1
li $2,0x7fffffff
sw $2,1232($2) ## sw溢出
addi $3,$3,1
sh $2,1232($2) ## sh溢出
addi $3,$3,1
sb $2,1232($2) ## sb溢出
addi $3,$3,1
sw $2,0x7f08 ## sw COunt
addi $3,$3,1
ori $2,$0,0x7f20
sw $2,0($2) ## sw超出范围
addi $3,$3,1
ori $2,$0,0x4120
sh $2,0($2) ## sh超出范围
addi $3,$3,1
ori $2,$0,0x7f1c
sb $2,0($2) ## sb超出范围
addi $3,$3,1
lw $2,1($0) ## lw 字未对齐
addi $3,$3,1
lh $2,1($0) ## lh半字未对齐
addi $3,$3,1
lhu $2,1($0) ## lhu半字未对齐
addi $3,$3,1
lh $2,0x7f00($0) ## lh取Timer
addi $3,$3,1
lhu $2,0x7f00($0) ## lhu取TImer
addi $3,$3,1
lb $2,0x7f10($0) ## lb取Timer
addi $3,$3,1
lbu $2,0x7f10($0) ## lbu取Timer
addi $3,$3,1
li $2,0x7fffffff
lw $2,1232($2) ## lw溢出
addi $3,$3,1
lh $2,1232($2) ## lh溢出
addi $3,$3,1
lhu $2,1232($2) ## lw溢出
addi $3,$3,1
lb $2,1232($2) ## lb溢出
addi $3,$3,1
lbu $2,1232($2) ## lbu溢出
addi $3,$3,1
ori $2,$0,0x7f20
lw $2,0($2) ## lw 超出范围
addi $3,$3,1
ori $2,$0,0x3000
lh $2,0($2) ## lh 超出范围
addi $3,$3,1
ori $2,$0,0x5000
lhu $2,0($2) ## lhu 超出范围
addi $3,$3,1
ori $2,$0,0x7a00
lb $2,0($2) ## lb 超出范围
addi $3,$3,1
ori $2,$0,0x8000
lbu $2,0($2) ## lbu 超出范围
addi $3,$3,1
li $2,0x7fffffff
add $2,$2,$2 ## 加法溢出
addi $3,$3,1
addi $2,$2,1232 ## addi溢出
addi $3,$3,1
li $4,-0x24201322
sub $2,$4,$2 ## sub溢出
addi $3,$3,1
db:
li $10,0x7fffffff
beq $0,$0,test2
add $10,$10,$10 ## db 异常
ori $4,$0,4 ## 
test2:
addi $3,$3,1
li $10,0x7fffffff
ori $5,$0,0x318c # test3
jalr $6,$5
add $10,$10,$10 ## db 异常
test3:
addi $3,$3,1
li $10,0x7fffffff
bne $0,$0,test4
addi $10,$10,13924 ## 不跳转 db 异常
nop
test4:
addi $3,$3,1
lw $4,1($0) ## lw 字未对齐
addi $3,$3,1
beq $0,$0,test5 ## M级异常与D级跳转 PC测试
nop
addu $4,$4,$5
test5:
teq $1,$2 ## 未知指令
addi $3,$3,1
j test6 ## M级异常与D级跳转 PC测试 
nop
addiu $4,$4,3
xor $4,$2,$4
test6:
addi $4,$2,1002
addi $4,$4,1
test_end:
beq $0,$0,test_end
nop



.ktext 0x4180
## $30 记录异常次数
## $29 记录中断次数
## $28 调整EPC
## $27 取Cause的BD判断
## $26 取Cause的ExcCode
## $25 取SR
## 规定延迟槽异常为$10导致的异常（如add $10,$10,$10 溢出），db_hanlder将$10清0后返回，$30加1
## 规定非延迟槽指令异常，则exc_handler将EPC对齐后EPC+4跳过该指令，$30加1
## 规定中断处理 EPC不改变 返回原指令，$29加1
mfc0 $28,$14
mfc0 $27,$13
mfc0 $26,$13
mfc0 $25,$12
sll $26,$26,25
srl $26,$26,27 ## ExcCode（通过移位消除IP和BD的影响）
srl $27,$27,31 ## BD
beq $26,$0,interrupt_handler ## ExcCode=0 中断处理
nop
bgtz $27,db_handler ## BD=1
nop
## 延迟槽指令异常同时被外部中断，优先处理外部中断
exc_handler:
andi $28,$28,0xfffffffc ## 字对齐
addi $28,$28,4 ## EPC+4
mtc0 $28,$14
addi $30,$30,1 ## 记录异常次数
eret



db_handler:
or $10,$0,$0 ## $10清零 确保下次延迟槽不会异常
addi $30,$30,1 ## 记录异常次数
eret


interrupt_handler:
addi $29,$29,1
eret ##记录中断次数
